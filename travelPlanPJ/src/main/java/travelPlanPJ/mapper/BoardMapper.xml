<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="travelPlanPJ.mapper.BoardMapper">
<insert id="boardWrite" parameterType="board">
INSERT INTO 
board(board_num
	,board_name
	,board_content
	,board_write_date
	,mem_num)
VALUES
	(#{boardNum}
	,#{boardName}
	,#{boardContent}
	,now()
	,#{memNum}
	)
</insert>

<select id="boardAutoNum" resultType="Integer">
SELECT
	coalesce(max(board_num), 0) + 1
FROM
	board
</select>

<select id="boardDetail" parameterType="Integer" resultType="board">
SELECT 
	A.board_num as boardNum
	,A.board_name as boardName
	,A.board_content as boardContent
	,A.board_write_date as boardWriteDate
	,A.board_mod_date as boardModDate
	,A.mem_num as memNum
	,B.mem_id as memId
FROM
	board A
JOIN
	member B
ON
	A.mem_num = B.mem_num
AND
	board_num = #{boardNum}
</select>

<select id="boardList" parameterType="paging" resultType="board">
SELECT
	*
FROM
	(SELECT ROW_NUMBER() OVER (ORDER BY board_num DESC) AS rn
	,A.board_num AS boardNum
	,A.board_name AS boardName
	,A.board_content AS boardContent
	,A.board_write_date AS boardWriteDate
	,A.board_mod_date AS boardModDate
	,A.mem_num AS memNum
	,B.mem_id AS memId
FROM
	board A
JOIN 
	member B ON A.mem_num = B.mem_num
<if test="searchType != null and searchType != ''">
WHERE
	<choose>
		<when test="searchType == 'name'">
			board_name LIKE CONCAT('%', #{searchWord}, '%')
		</when>
		<when test="searchType == 'content'">
			board_content LIKE CONCAT('%', #{searchWord}, '%')
		</when>
		<when test="searchType == 'memNum'">
			B.mem_id LIKE CONCAT('%', #{searchWord}, '%')
		</when>
	</choose>
</if>
) sub1
WHERE
	rn BETWEEN #{startRow} AND #{endRow}
</select>

<select id="boardCount" parameterType="paging" resultType="integer">
SELECT
	COUNT(*)
FROM
	board A
JOIN
	member B ON A.mem_num = B.mem_num
<if test="searchType != null and searchType != ''">
WHERE
	<choose>
		<when test="searchType == 'name'">
			board_name LIKE CONCAT('%', #{searchWord}, '%')
		</when>
		<when test="searchType == 'content'">
			board_content LIKE CONCAT('%', #{searchWord}, '%')
		</when>
		<when test="searchType == 'memNum'">
			B.mem_id LIKE CONCAT('%', #{searchWord}, '%')
		</when>
	</choose>
</if>
</select>

<update id="boardUpdate" parameterType="board">
UPDATE
	board
SET
	board_name = #{boardName}
	,board_content = #{boardContent}
	,board_mod_date = now()
WHERE
	board_num = #{boardNum}
</update>

<delete id="boardDelete" parameterType="Integer">
DELETE
FROM
	board
WHERE
	board_num = #{boardNum}
</delete>

<select id="commentAutoNum" resultType="Integer">
SELECT 
	coalesce(max(comment_num),0) + 1
FROM
	comment
</select>
<insert id="commentWrite" parameterType="comment">
INSERT INTO 
comment
		(comment_num
		,board_num
		,comment_content
		,comment_date
		,mem_num)
VALUES
		(#{commentNum}
		,#{boardNum}
		,#{commentContent}
		,now()
		,#{memNum})
</insert>
<select id="commentList" parameterType="Integer" resultType="comment">
SELECT
	A.comment_num AS commentNum
	,A.board_num AS boardNum
	,A.comment_content AS commentContent
	,A.comment_date AS commentDate
	,A.mem_num AS memNum
	,B.mem_id AS memId
FROM
	comment A
JOIN
	member B ON A.mem_num = B.mem_num
WHERE
	A.board_num = #{boardNum}
ORDER BY A.comment_num
</select>
<update id="commentModify" parameterType="comment">
UPDATE 
	comment
SET comment_content = #{commentContent}
WHERE 
	board_num = #{boardNum}
AND 
	mem_num = #{memNum}
AND
	comment_num = #{commentNum}
</update>

<delete id="commentDelete" parameterType="map">
DELETE
FROM
	comment
WHERE
	board_num = #{boardNum}
AND
	comment_num = #{commentNum}
AND
	mem_num = #{memNum}
</delete>
</mapper>